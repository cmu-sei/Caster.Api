# This is a basic workflow to help you get started with Actions

name: Build Client

on: 
  workflow_dispatch:
    inputs:
      clientVersion:
        description: 'Version of the Client package'     
        required: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Setup dotnet
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: '3.1.x'

      - name: Setup Package Name
        id: package_name
        run: |
          echo ::set-output name=name::Caster.Api.Client
          echo ::set-output name=dll_name::Caster.Api
          echo ::set-output name=directory::Caster.Api

      - uses: actions/checkout@v2

      - name: Build Package
        run: |
          dotnet new tool-manifest
          dotnet tool install --version 5.6.3 Swashbuckle.AspNetCore.Cli
          cd ${{ steps.package_name.outputs.directory }}
          dotnet build -c Release /p:version=${{ github.event.inputs.clientVersion }}
          
      - name: Run Swagger
        run: |
          cd ${{ steps.package_name.outputs.directory }}
          dotnet swagger tofile --output ../${{ steps.package_name.outputs.name }}/swagger.json bin/Release/*/${{ steps.package_name.outputs.dll_name }}.dll v1
                    
      - name: Run AutoRest
        run: |
          npm install autorest@3.0.6247
          find . -name "*autorest*"
          cd ${{ steps.package_name.outputs.name }}

      - name: Create NuGet Package
        run: |
          cd ${{ steps.package_name.outputs.name }}
          dotnet pack -c Release /p:version=${{ github.event.inputs.clientVersion }}  \
          /p:authors="Carnegie Mellon University/Software Engineering Institute"      \
          /p:description="AutoRest generated client for Crucible's ${{ steps.package_name.outputs.dll_name }}"   \
          --include-source
           
          cd bin/Release
          mv ${{ steps.package_name.outputs.name }}.${{ github.event.inputs.clientVersion }}.nupkg ${{ steps.package_name.outputs.name }}.${{ github.event.inputs.clientVersion }}.nupkg.bak
          unzip ${{ steps.package_name.outputs.name }}.${{ github.event.inputs.clientVersion }}.nupkg.bak -d tmp
          chmod -R 755 tmp
          cd tmp
          sed -i '/<\/version>/a \    <owners>Carnegie Mellon University\/Software Engineering Institute<\/owners>' ${{ steps.package_name.outputs.name }}.nuspec
          sed -i '/<\/version>/a \    <license type="expression">MIT<\/license>' ${{ steps.package_name.outputs.name }}.nuspec
          sed -i '/<\/version>/a \    <licenseUrl>https:\/\/licenses.nuget.org\/MIT<\/licenseUrl>' ${{ steps.package_name.outputs.name }}.nuspec
          sed -i '/<\/version>/a \    <projectUrl>https:\/\/github.com\/cmu-sei\/crucible<\/projectUrl>' ${{ steps.package_name.outputs.name }}.nuspec
          sed -i '/<\/version>/a \    <repository type="git" url="https:\/\/github.com\/cmu-sei\/crucible.git" \/>' ${{ steps.package_name.outputs.name }}.nuspec
          zip -r ../${{ steps.package_name.outputs.name }}.${{ github.event.inputs.clientVersion }}.nupkg *
     
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ steps.package_name.outputs.name }}.${{ github.event.inputs.clientVersion }}
          release_name: ${{ steps.package_name.outputs.name }} ${{ github.event.inputs.clientVersion }}
          draft: false
          prerelease: false

      - name: Upload Release Asset
        id: upload-release-asset 
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.package_name.outputs.name }}/bin/Release/${{ steps.package_name.outputs.name }}.${{ github.event.inputs.clientVersion }}.nupkg
          asset_name: ${{ steps.package_name.outputs.name }}.${{ github.event.inputs.clientVersion }}.nupkg
          asset_content_type: application/zip
